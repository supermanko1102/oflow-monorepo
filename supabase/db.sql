-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  team_id uuid NOT NULL,
  line_user_id text NOT NULL,
  status text DEFAULT 'collecting_info'::text,
  collected_data jsonb DEFAULT '{}'::jsonb,
  missing_fields ARRAY,
  order_id uuid,
  last_message_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT conversations_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid,
  name text NOT NULL,
  phone text,
  line_user_id text,
  email text,
  total_orders integer DEFAULT 0,
  total_spent numeric DEFAULT 0,
  notes text,
  tags ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_order_at timestamp with time zone,
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id)
);
CREATE TABLE public.line_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid,
  line_message_id text NOT NULL UNIQUE,
  line_user_id text NOT NULL,
  message_type text NOT NULL,
  message_text text,
  message_data jsonb,
  ai_parsed boolean DEFAULT false,
  ai_result jsonb,
  ai_confidence numeric,
  order_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  conversation_id uuid,
  role text DEFAULT 'customer'::text,
  CONSTRAINT line_messages_pkey PRIMARY KEY (id),
  CONSTRAINT line_messages_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT line_messages_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT line_messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid,
  customer_id uuid,
  order_number text NOT NULL UNIQUE,
  customer_name text NOT NULL,
  customer_phone text,
  items jsonb NOT NULL,
  total_amount numeric NOT NULL,
  pickup_date date NOT NULL,
  pickup_time time without time zone NOT NULL,
  pickup_method text DEFAULT 'store'::text,
  delivery_address text,
  status text DEFAULT 'pending'::text,
  source text DEFAULT 'auto'::text,
  line_conversation_id text,
  original_message text,
  notes text,
  customer_notes text,
  created_by uuid,
  updated_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  confirmed_at timestamp with time zone,
  completed_at timestamp with time zone,
  conversation_id uuid,
  delivery_method text DEFAULT 'pickup'::text,
  requires_frozen boolean DEFAULT false,
  store_info text,
  shipping_address text,
  service_duration integer,
  service_notes text,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT orders_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT orders_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id),
  CONSTRAINT orders_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);
CREATE TABLE public.reminders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid,
  order_id uuid,
  remind_type text NOT NULL,
  remind_time timestamp with time zone NOT NULL,
  sent boolean DEFAULT false,
  sent_at timestamp with time zone,
  title text NOT NULL,
  message text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reminders_pkey PRIMARY KEY (id),
  CONSTRAINT reminders_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT reminders_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.subscription_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid,
  revenuecat_transaction_id text NOT NULL UNIQUE,
  revenuecat_event_type text NOT NULL,
  product_id text NOT NULL,
  platform text NOT NULL,
  price numeric NOT NULL,
  currency text DEFAULT 'TWD'::text,
  purchased_at timestamp with time zone NOT NULL,
  expires_at timestamp with time zone,
  raw_data jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscription_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT subscription_transactions_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id)
);
CREATE TABLE public.team_invites (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid,
  invite_code text NOT NULL UNIQUE,
  invited_by uuid,
  role text DEFAULT 'member'::text,
  max_uses integer,
  uses_count integer DEFAULT 0,
  expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT team_invites_pkey PRIMARY KEY (id),
  CONSTRAINT team_invites_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT team_invites_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.users(id)
);
CREATE TABLE public.team_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid,
  user_id uuid,
  role text DEFAULT 'member'::text,
  can_manage_orders boolean DEFAULT true,
  can_manage_customers boolean DEFAULT true,
  can_manage_settings boolean DEFAULT false,
  can_view_analytics boolean DEFAULT true,
  can_invite_members boolean DEFAULT false,
  invited_by uuid,
  invite_accepted_at timestamp with time zone,
  joined_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT team_members_pkey PRIMARY KEY (id),
  CONSTRAINT team_members_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT team_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT team_members_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.users(id)
);
CREATE TABLE public.team_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  team_id uuid UNIQUE,
  business_hours jsonb,
  holidays ARRAY,
  order_lead_time_days integer DEFAULT 3,
  max_daily_orders integer DEFAULT 20,
  reminder_days ARRAY DEFAULT ARRAY[7, 3, 1],
  notification_time time without time zone DEFAULT '09:00:00'::time without time zone,
  ai_auto_confirm boolean DEFAULT false,
  ai_confidence_threshold numeric DEFAULT 0.8,
  custom_fields jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT team_settings_pkey PRIMARY KEY (id),
  CONSTRAINT team_settings_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id)
);
CREATE TABLE public.teams (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  slug text UNIQUE,
  description text,
  logo_url text,
  line_channel_id text UNIQUE,
  line_channel_secret text,
  line_channel_access_token text,
  line_channel_name text,
  line_webhook_verified boolean DEFAULT false,
  line_connected_at timestamp with time zone,
  subscription_status text DEFAULT 'trial'::text,
  subscription_plan text DEFAULT 'pro'::text,
  trial_started_at timestamp with time zone,
  trial_ends_at timestamp with time zone,
  subscription_started_at timestamp with time zone,
  subscription_current_period_end timestamp with time zone,
  revenuecat_customer_id text,
  subscription_product_id text,
  subscription_platform text,
  auto_mode boolean DEFAULT false,
  ai_enabled boolean DEFAULT true,
  notification_enabled boolean DEFAULT true,
  timezone text DEFAULT 'Asia/Taipei'::text,
  business_type text DEFAULT 'bakery'::text,
  total_orders integer DEFAULT 0,
  total_revenue numeric DEFAULT 0,
  member_count integer DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  line_bot_user_id text,
  CONSTRAINT teams_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  line_user_id text NOT NULL UNIQUE,
  line_display_name text,
  line_picture_url text,
  line_email text,
  preferred_language text DEFAULT 'zh-TW'::text,
  current_team_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_login_at timestamp with time zone,
  auth_user_id uuid,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_current_team_id_fkey FOREIGN KEY (current_team_id) REFERENCES public.teams(id),
  CONSTRAINT fk_users_auth_user_id FOREIGN KEY (auth_user_id) REFERENCES auth.users(id)
);